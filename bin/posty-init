#!/usr/bin/env ruby

require 'sqlite3'
require 'tmpdir'
require 'choice'
require 'fastercsv'

codepoint_wgs = 'http://parlvid.mysociety.org:81/os/codepo_gb_wgs84.zip'

Choice.options do
  option :database, :required => true do
    short '-d'
    long '--database=SQLITE'
    desc 'The database to create and put data into.'
  end
  option :codepoint do
    short '-c'
    long '--codepoint=ZIPFILE'
    desc 'Existing (WGS84-formatted) codepoint zip file.'
    default nil
  end
end

database = Choice.choices[:database]
codepoint = Choice.choices[:codepoint]

# Die if db already exists
if File.exist? database
  STDERR.puts 'Database already exists. Not overwriting.'
  exit 1
end

Dir.mktmpdir do |dir|
  # Download wgs84 dump from mySociety
  unless codepoint and File.exist? codepoint
    `wget '#{codepoint_wgs}' -O '#{dir}/codepo_gb_wgs84.zip'`
    codepoint = "#{dir}/codepo_gb_wgs84.zip"
  end

  # Unzip
  `unzip -d '#{dir}' '#{codepoint}'`

  # Create database
  db = SQLite3::Database.new(database)
  db.execute <<END
    CREATE TABLE codepoint (postcode, quality, latitude, longitude, country, nhs_region, nhs_health authority, county, district, ward)
END

  # Slurp CSV into SQLite
  Dir.glob("#{dir}/data/CSV/*.csv").each do |csv|
    csv.match(/(\w+)\.csv$/)
    STDERR.puts "Reading #{$1.upcase}"
    FasterCSV.foreach(csv) do |row|
      db.execute <<END, *row
        INSERT INTO codepoint VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
END
    end
  end

  db.close
end

STDERR.puts 'Finished.'
